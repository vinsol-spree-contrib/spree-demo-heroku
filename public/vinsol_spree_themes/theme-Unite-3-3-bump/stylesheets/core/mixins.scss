$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
      $width: map_get($breakpoints, $width);
      @if $type == max {
          $width: $width - 1px;
      }
      @media only screen and (#{$type}-width: $width) {
          @content;
      }
  }
}

/*
.site-header {
  padding: 2rem;
  font-size: 1.8rem;
  @include mq('tablet-wide') {
      padding-top: 4rem;
      font-size: 2.4rem;
  }
}
*/

@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

/*
input,
textarea {
  @include input-placeholder {
      color: $grey;
  }
}
*/

@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
@mixin clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
  zoom: 1;
}
@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + '.eot');
    src: url($file-name + '.eot?#iefix')  format('embedded-opentype'),
         url($file-name + '.woff') format('woff'),
         url($file-name + '.ttf')  format('truetype'),
         url($file-name + '.svg##{$font-name}')  format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin border-top-left-radius($radius) {
  -webkit-border-top-left-radius: $radius;
  -moz-border-top-left-radius: $radius;
  -ms-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin border-top-right-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  -moz-border-top-right-radius: $radius;
  -ms-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin border-bottom-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  -moz-border-bottom-left-radius: $radius;
  -ms-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
}

@mixin border-bottom-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  -moz-border-bottom-right-radius: $radius;
  -ms-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
}

@mixin border-top-radius($radius) {
  @include border-top-left-radius($radius);
  @include border-top-right-radius($radius);
}

@mixin hide-text {
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

@mixin text-shadow($top, $left, $blur, $color) {
  -webkit-text-shadow: $top $left $blur $color;
  -moz-text-shadow: $top $left $blur $color;
  -ms-text-shadow: $top $left $blur $color;
  text-shadow: $top $left $blur $color;
}

@mixin box-shadow($top, $left, $blur, $color) {
  -webkit-box-shadow: $top $left $blur $color;
  -moz-box-shadow: $top $left $blur $color;
  box-shadow: $top $left $blur $color;
}
@mixin rotate($deg) {
  -moz-transform: rotate($deg);
  -ms-transform: rotate($deg);
  -webkit-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin transform-scale($deg) {
  -moz-transform: scale($deg);
  -ms-transform: scale($deg);
  -webkit-transform: scale($deg);
  transform: scale($deg);
}

@mixin transition($all, $time, $how: ease-in-out) {
  -moz-transition: $all $time $how;
  -ms-transition: $all $time $how;
  -webkit-transition: $all $time $how;
  transition: $all $time $how;
}

@mixin opacity($value) {
  -moz-opacity: $value;
  -webkit-opacity: $value;
  opacity: $value;
}
@mixin translate($valx, $valy) {
  transform: translate($valx, $valy);
  -moz-transform: translate($valx, $valy);
  -webkit-transform: translate($valx, $valy);
}
@mixin translateY($val){
  transform: translateY($val);
  -moz-transform: translateY($val);
  -webkit-transform: translateY($val);
}
@mixin translateX($val){
  transform: translateX($val);
  -moz-transform: translateX($val);
  -webkit-transform: translateX($val);
}

@mixin filter($value) {
  -webkit-filter: blur($value);
  -moz-filter: blur($value);
  -o-filter: blur($value);
  -ms-filter: blur($value);
  filter: blur($value);
}
@mixin cover($prop) {
  -moz-background-size: $prop;
  -webkit-background-size: $prop;
  -ms-background-size: $prop;
  background-size: $prop;
}

@mixin background-size($prop, $prop2) {
  -moz-background-size: $prop, $prop2;
  -webkit-background-size: $prop, $prop2;
  -ms-background-size: $prop, $prop2;
  background-size: $prop, $prop2;
}
